import * as XLSX from 'xlsx';
// Leo: I want to disable this rule on tsconfig as well
// eslint-disable-next-line @typescript-eslint/no-explicit-any
function downloadXLSXSpreadsheet(rows, options) {
    const worksheet = XLSX.utils.json_to_sheet(rows);
    worksheet['!cols'] = getColumnWidths(rows);
    const workbook = XLSX.utils.book_new();
    XLSX.utils.book_append_sheet(workbook, worksheet, 'Dados ExtraÃ­dos');
    XLSX.writeFile(workbook, `${options?.filename || 'Planilha'}.xlsx`, {
        compression: true,
    });
}
const MAX_ROW_WIDTH = 1000;
function getColumnWidths(rows) {
    const headerColumn = Object.entries(rows[0] || {});
    return headerColumn.map(([header, cellValue]) => {
        const minWidth = String(header).length;
        const maxWidth = Math.min(String(cellValue).length, MAX_ROW_WIDTH);
        const widthInCharsLenght = Math.max(minWidth, maxWidth);
        return { wch: widthInCharsLenght };
    });
}
export { downloadXLSXSpreadsheet };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXRpbHMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvdXRpbHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxLQUFLLElBQUksTUFBTSxNQUFNLENBQUM7QUFNN0IsdURBQXVEO0FBQ3ZELDhEQUE4RDtBQUM5RCxTQUFTLHVCQUF1QixDQUFDLElBQVcsRUFBRSxPQUFxQjtJQUNqRSxNQUFNLFNBQVMsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUNqRCxTQUFTLENBQUMsT0FBTyxDQUFDLEdBQUcsZUFBZSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQzNDLE1BQU0sUUFBUSxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsUUFBUSxFQUFFLENBQUM7SUFDdkMsSUFBSSxDQUFDLEtBQUssQ0FBQyxpQkFBaUIsQ0FBQyxRQUFRLEVBQUUsU0FBUyxFQUFFLGlCQUFpQixDQUFDLENBQUM7SUFDckUsSUFBSSxDQUFDLFNBQVMsQ0FBQyxRQUFRLEVBQUUsR0FBRyxPQUFPLEVBQUUsUUFBUSxJQUFJLFVBQVUsT0FBTyxFQUFFO1FBQ2xFLFdBQVcsRUFBRSxJQUFJO0tBQ2xCLENBQUMsQ0FBQztBQUNMLENBQUM7QUFFRCxNQUFNLGFBQWEsR0FBRyxJQUFJLENBQUM7QUFDM0IsU0FBUyxlQUFlLENBQUMsSUFBK0I7SUFDdEQsTUFBTSxZQUFZLEdBQUcsTUFBTSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksRUFBRSxDQUFDLENBQUM7SUFDbkQsT0FBTyxZQUFZLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxNQUFNLEVBQUUsU0FBUyxDQUFDLEVBQUUsRUFBRTtRQUM5QyxNQUFNLFFBQVEsR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUMsTUFBTSxDQUFDO1FBQ3ZDLE1BQU0sUUFBUSxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLFNBQVMsQ0FBQyxDQUFDLE1BQU0sRUFBRSxhQUFhLENBQUMsQ0FBQztRQUNuRSxNQUFNLGtCQUFrQixHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsUUFBUSxFQUFFLFFBQVEsQ0FBQyxDQUFDO1FBQ3hELE9BQU8sRUFBRSxHQUFHLEVBQUUsa0JBQWtCLEVBQUUsQ0FBQztJQUNyQyxDQUFDLENBQUMsQ0FBQztBQUNMLENBQUM7QUFFRCxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsQ0FBQyJ9